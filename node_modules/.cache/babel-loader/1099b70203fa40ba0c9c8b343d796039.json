{"ast":null,"code":"import _toConsumableArray from \"/home/dev-marcio/map-react/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/dev-marcio/map-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dev-marcio/map-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dev-marcio/map-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dev-marcio/map-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dev-marcio/map-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/dev-marcio/map-react/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/dev-marcio/map-react/src/components/Map.jsx\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nvar Map =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Map, _Component);\n\n  function Map() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Map);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Map)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      locations: [{\n        name: \"Cinemaxx Glória\",\n        location: {\n          lat: -21.20983949,\n          lng: -41.88704682\n        }\n      }, {\n        name: \"Cristo Redentor\",\n        location: {\n          lat: -21.20097577,\n          lng: -41.88172988\n        }\n      }, {\n        name: \"Hospital São José do Avaí\",\n        location: {\n          lat: -21.20188602,\n          lng: -41.88968531\n        }\n      }, {\n        name: \"Prefeitura Municipal\",\n        location: {\n          lat: -21.19874516,\n          lng: -41.904684232\n        }\n      }, {\n        name: \"Centro Poliesportivo\",\n        location: {\n          lat: -21.19495355,\n          lng: -41.90685375\n        }\n      }],\n      query: '',\n      markers: [],\n      infowindow: new _this.props.google.maps.InfoWindow(),\n      highlightedIcon: null\n    };\n\n    _this.onclickLocation = function () {\n      var that = _assertThisInitialized(_assertThisInitialized(_this));\n\n      var infowindow = _this.state.infowindow;\n\n      var displayInfowindow = function displayInfowindow(e) {\n        var markers = _this.state.markers;\n        var markerInd = markers.findIndex(function (m) {\n          return m.title.toLowerCase() === e.target.innerText.toLowerCase();\n        });\n        that.populateInfoWindow(markers[markerInd], infowindow);\n      };\n\n      document.querySelector('.locations-list').addEventListener('click', function (e) {\n        if (e.target && e.target.nodeName === \"LI\") {\n          displayInfowindow(e);\n        }\n      });\n    };\n\n    _this.handleValueChange = function (e) {\n      _this.setState({\n        query: e.target.value\n      });\n    };\n\n    _this.addMarkers = function () {\n      var google = _this.props.google;\n      var infowindow = _this.state.infowindow;\n      var bounds = new google.maps.LatLngBounds();\n\n      _this.state.locations.forEach(function (location, ind) {\n        var marker = new google.maps.Marker({\n          position: {\n            lat: location.location.lat,\n            lng: location.location.lng\n          },\n          map: _this.map,\n          title: location.name\n        });\n        marker.addListener('click', function () {\n          _this.populateInfoWindow(marker, infowindow);\n        });\n\n        _this.setState(function (state) {\n          return {\n            markers: _toConsumableArray(state.markers).concat([marker])\n          };\n        });\n\n        bounds.extend(marker.position);\n      });\n\n      _this.map.fitBounds(bounds);\n    };\n\n    _this.populateInfoWindow = function (marker, infowindow) {\n      var defaultIcon = marker.getIcon();\n      var _this$state = _this.state,\n          highlightedIcon = _this$state.highlightedIcon,\n          markers = _this$state.markers; // Check to make sure the infowindow is not already opened on this marker.\n\n      if (infowindow.marker !== marker) {\n        // reset the color of previous marker\n        if (infowindow.marker) {\n          var ind = markers.findIndex(function (m) {\n            return m.title === infowindow.marker.title;\n          });\n          markers[ind].setIcon(defaultIcon);\n        } // change marker icon color of clicked marker\n\n\n        marker.setIcon(highlightedIcon);\n        infowindow.marker = marker;\n        infowindow.setContent(\"<h3>\".concat(marker.title, \"</h3><h4>user likes it</h4>\"));\n        infowindow.open(_this.map, marker); // Make sure the marker property is cleared if the infowindow is closed.\n\n        infowindow.addListener('closeclick', function () {\n          infowindow.marker = null;\n        });\n      }\n    };\n\n    _this.makeMarkerIcon = function (markerColor) {\n      var google = _this.props.google;\n      var markerImage = new google.maps.MarkerImage('http://chart.googleapis.com/chart?chst=d_map_spin&chld=1.15|0|' + markerColor + '|40|_|%E2%80%A2', new google.maps.Size(21, 34), new google.maps.Point(0, 0), new google.maps.Point(10, 34), new google.maps.Size(21, 34));\n      return markerImage;\n    };\n\n    return _this;\n  }\n\n  _createClass(Map, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadMap();\n      this.onclickLocation(); // Create a \"highlighted location\" marker color for when the user\n      // clicks on the marker.\n\n      this.setState({\n        highlightedIcon: this.makeMarkerIcon('FFFF24')\n      });\n    }\n  }, {\n    key: \"loadMap\",\n    value: function loadMap() {\n      if (this.props && this.props.google) {\n        var google = this.props.google;\n        var maps = google.maps;\n        var mapRef = this.refs.map;\n        var node = ReactDOM.findDOMNode(mapRef);\n        var mapConfig = Object.assign({}, {\n          center: {\n            lat: -21.1877747,\n            lng: -41.8799408\n          },\n          zoom: 12,\n          mapTypeId: 'roadmap'\n        });\n        this.map = new maps.Map(node, mapConfig);\n        this.addMarkers();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          locations = _this$state2.locations,\n          query = _this$state2.query,\n          markers = _this$state2.markers,\n          infowindow = _this$state2.infowindow;\n\n      if (query) {\n        locations.forEach(function (l, i) {\n          if (l.name.toLowerCase().includes(query.toLowerCase())) {\n            markers[i].setVisible(true);\n          } else {\n            if (infowindow.marker === markers[i]) {\n              // close the info window if marker removed\n              infowindow.close();\n            }\n\n            markers[i].setVisible(false);\n          }\n        });\n      } else {\n        locations.forEach(function (l, i) {\n          if (markers.length && markers[i]) {\n            markers[i].setVisible(true);\n          }\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        role: \"search\",\n        type: \"text\",\n        value: this.state.value,\n        onChange: this.handleValueChange,\n        placeholder: \"Search..\",\n        title: \"Type in a local\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        className: \"locations-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, markers.filter(function (m) {\n        return m.getVisible();\n      }).map(function (m, i) {\n        return React.createElement(\"li\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, m.title);\n      }))), React.createElement(\"div\", {\n        role: \"application\",\n        className: \"map\",\n        ref: \"map\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"loading map...\")));\n    }\n  }]);\n\n  return Map;\n}(Component);\n\nexport { Map as default };","map":{"version":3,"sources":["/home/dev-marcio/map-react/src/components/Map.jsx"],"names":["React","Component","ReactDOM","Map","state","locations","name","location","lat","lng","query","markers","infowindow","props","google","maps","InfoWindow","highlightedIcon","onclickLocation","that","displayInfowindow","e","markerInd","findIndex","m","title","toLowerCase","target","innerText","populateInfoWindow","document","querySelector","addEventListener","nodeName","handleValueChange","setState","value","addMarkers","bounds","LatLngBounds","forEach","ind","marker","Marker","position","map","addListener","extend","fitBounds","defaultIcon","getIcon","setIcon","setContent","open","makeMarkerIcon","markerColor","markerImage","MarkerImage","Size","Point","loadMap","mapRef","refs","node","findDOMNode","mapConfig","Object","assign","center","zoom","mapTypeId","l","i","includes","setVisible","close","length","filter","getVisible"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\n\nexport default class Map extends Component {\n\n  state = {\n    locations: [\n      { name: \"Cinemaxx Glória\", location: { lat: -21.20983949, lng: -41.88704682 } },\n      { name: \"Cristo Redentor\", location: { lat: -21.20097577, lng: -41.88172988 } },\n      { name: \"Hospital São José do Avaí\", location: { lat: -21.20188602, lng: -41.88968531 } },\n      { name: \"Prefeitura Municipal\", location: { lat: -21.19874516, lng: -41.904684232 } },\n      { name: \"Centro Poliesportivo\", location: { lat: -21.19495355, lng: -41.90685375 } }\n    ],\n    query: '',\n    markers: [],\n    infowindow: new this.props.google.maps.InfoWindow(),\n    highlightedIcon: null\n  }\n\n  componentDidMount() {\n    this.loadMap()\n    this.onclickLocation()\n    // Create a \"highlighted location\" marker color for when the user\n    // clicks on the marker.\n    this.setState({ highlightedIcon: this.makeMarkerIcon('FFFF24') })\n  }\n\n  loadMap() {\n    if (this.props && this.props.google) {\n      const { google } = this.props\n      const maps = google.maps\n\n      const mapRef = this.refs.map\n      const node = ReactDOM.findDOMNode(mapRef)\n\n      const mapConfig = Object.assign({}, {\n        center: { lat: -21.1877747, lng: -41.8799408 },\n        zoom: 12,\n        mapTypeId: 'roadmap'\n      })\n\n      this.map = new maps.Map(node, mapConfig)\n      this.addMarkers()\n    }\n\n  }\n\n  onclickLocation = () => {\n    const that = this\n    const { infowindow } = this.state\n\n    const displayInfowindow = (e) => {\n      const { markers } = this.state\n      const markerInd =\n        markers.findIndex(m => m.title.toLowerCase() === e.target.innerText.toLowerCase())\n      that.populateInfoWindow(markers[markerInd], infowindow)\n    }\n    document.querySelector('.locations-list').addEventListener('click', function (e) {\n      if (e.target && e.target.nodeName === \"LI\") {\n        displayInfowindow(e)\n      }\n    })\n  }\n\n  handleValueChange = (e) => {\n    this.setState({ query: e.target.value })\n  }\n\n  addMarkers = () => {\n    const { google } = this.props\n    let { infowindow } = this.state\n    const bounds = new google.maps.LatLngBounds()\n\n    this.state.locations.forEach((location, ind) => {\n      const marker = new google.maps.Marker({\n        position: { lat: location.location.lat, lng: location.location.lng },\n        map: this.map,\n        title: location.name\n      })\n\n      marker.addListener('click', () => {\n        this.populateInfoWindow(marker, infowindow)\n      })\n      this.setState((state) => ({\n        markers: [...state.markers, marker]\n      }))\n      bounds.extend(marker.position)\n    })\n    this.map.fitBounds(bounds)\n  }\n\n  populateInfoWindow = (marker, infowindow) => {\n    const defaultIcon = marker.getIcon()\n    const { highlightedIcon, markers } = this.state\n    // Check to make sure the infowindow is not already opened on this marker.\n    if (infowindow.marker !== marker) {\n      // reset the color of previous marker\n      if (infowindow.marker) {\n        const ind = markers.findIndex(m => m.title === infowindow.marker.title)\n        markers[ind].setIcon(defaultIcon)\n      }\n      // change marker icon color of clicked marker\n      marker.setIcon(highlightedIcon)\n      infowindow.marker = marker\n      infowindow.setContent(`<h3>${marker.title}</h3><h4>user likes it</h4>`)\n      infowindow.open(this.map, marker)\n      // Make sure the marker property is cleared if the infowindow is closed.\n      infowindow.addListener('closeclick', function () {\n        infowindow.marker = null\n      })\n    }\n  }\n\n  makeMarkerIcon = (markerColor) => {\n    const { google } = this.props\n    let markerImage = new google.maps.MarkerImage(\n      'http://chart.googleapis.com/chart?chst=d_map_spin&chld=1.15|0|' + markerColor +\n      '|40|_|%E2%80%A2',\n      new google.maps.Size(21, 34),\n      new google.maps.Point(0, 0),\n      new google.maps.Point(10, 34),\n      new google.maps.Size(21, 34));\n    return markerImage;\n  }\n\n  render() {\n    const { locations, query, markers, infowindow } = this.state\n    if (query) {\n      locations.forEach((l, i) => {\n        if (l.name.toLowerCase().includes(query.toLowerCase())) {\n          markers[i].setVisible(true)\n        } else {\n          if (infowindow.marker === markers[i]) {\n            // close the info window if marker removed\n            infowindow.close()\n          }\n          markers[i].setVisible(false)\n        }\n      })\n    } else {\n      locations.forEach((l, i) => {\n        if (markers.length && markers[i]) {\n          markers[i].setVisible(true)\n        }\n      })\n    }\n\n    return (\n      <div>\n        <div className=\"container\">\n          <div className=\"text-input\">\n            <input role=\"search\" type='text'\n              value={this.state.value} \n              onChange={this.handleValueChange} placeholder=\"Search..\" title=\"Type in a local\"/>\n            <ul className=\"locations-list\" >{\n              markers.filter(m => m.getVisible()).map((m, i) =>\n                (<li key={i}>{m.title}</li>))\n            }</ul>\n          </div>\n          <div role=\"application\" className=\"map\" ref=\"map\">\n            loading map...\n          </div>\n        </div>\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}